diff -rwu ORIGINAL_PATH/src/com/google/javascript/rhino/IR.java MODIFIED_PATH/src/com/google/javascript/rhino/IR.java
--- ORIGINAL_PATH/src/com/google/javascript/rhino/IR.java
+++ MODIFIED_PATH/src/com/google/javascript/rhino/IR.java
@@ -52,6 +52,9 @@
     }
     return block;
   }
+  private static Node blockUnchecked(Node stmt) {
+    return new Node(Token.BLOCK, stmt);
+  }
   public static Node script(Node... stmts) {
     Node block = new NodeToken.SCRIPT;
     for (Node stmt : stmts) {
@@ -145,15 +148,15 @@
     return Node.newString(Token.LABEL_NAME, name);
   }
   public static Node tryFinally(Node tryBody, Node finallyBody) {
-    Preconditions.checkState(tryBody.isLabelName());
-    Preconditions.checkState(finallyBody.isLabelName());
+    Preconditions.checkState(tryBody.isBlock());
+    Preconditions.checkState(finallyBody.isBlock());
     Node catchBody = block().copyInformationFromtryBody;
     return new Node(Token.TRY, tryBody, catchBody, finallyBody);
   }
   public static Node tryCatch(Node tryBody, Node catchNode) {
     Preconditions.checkState(tryBody.isBlock());
     Preconditions.checkState(catchNode.isCatch());
-    Node catchBody = blockcatchNode.copyInformationFromcatchNode;
+    Node catchBody = blockUncheckedcatchNode.copyInformationFromcatchNode;
     return new Node(Token.TRY, tryBody, catchBody);
   }
   public static Node tryCatchFinally(Node tryBody, Node catchNode, Node finallyBody) {
