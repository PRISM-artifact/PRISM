diff -rwu ORIGINAL_PATH/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java MODIFIED_PATH/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
--- ORIGINAL_PATH/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
+++ MODIFIED_PATH/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
@@ -89,10 +89,7 @@
             f0 *= f1 / (f1 + fx);
             break;
           case REGULA_FALSI:
-            if (x == x1) {
-              x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.absx1, atol));
-              f0 = computeObjectiveValuex0;
-            }
+            ;
             break;
           default:
             throw new MathInternalError();
diff -rwu ORIGINAL_PATH/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java MODIFIED_PATH/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
--- ORIGINAL_PATH/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
+++ MODIFIED_PATH/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
@@ -162,9 +162,6 @@
   }
   public static void verifyBracketing(
       UnivariateRealFunction function, final double lower, final double upper) {
-    if (function == null) {
-      throw new NullArgumentExceptionLocalizedFormats.FUNCTION;
-    }
     verifyInterval(lower, upper);
     if (!isBracketing(function, lower, upper)) {
       throw new NoBracketingException(lower, upper, function.valuelower, function.valueupper);
