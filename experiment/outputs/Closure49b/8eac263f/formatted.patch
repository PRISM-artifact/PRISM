diff -rwu ORIGINAL_PATH/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java MODIFIED_PATH/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
--- ORIGINAL_PATH/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
+++ MODIFIED_PATH/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
@@ -44,16 +44,7 @@
     } else {
       renamer = nameStack.peek().forChildScope();
     }
-    if (declarationRoot.getType() == Token.FUNCTION) {
-      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild();
-          c != null;
-          c = c.getNext()) {
-        String name = c.getString();
-        renamer.addDeclaredNamename;
-      }
-      Node functionBody = declarationRoot.getLastChild();
-      findDeclaredNames(functionBody, null, renamer);
-    } else if (declarationRoot.getType() != Token.FUNCTION) {
+    if (declarationRoot.getType() != Token.FUNCTION) {
       findDeclaredNames(declarationRoot, null, renamer);
     }
     nameStack.pushrenamer;
@@ -80,6 +71,18 @@
           nameStack.pushrenamer;
         }
         break;
+      case Token.LP:
+        {
+          Renamer renamer = nameStack.peek().forChildScope();
+          for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
+            String name = c.getString();
+            renamer.addDeclaredNamename;
+          }
+          Node functionBody = n.getNext();
+          findDeclaredNames(functionBody, null, renamer);
+          nameStack.pushrenamer;
+        }
+        break;
       case Token.CATCH:
         {
           Renamer renamer = nameStack.peek().forChildScope();
@@ -107,6 +110,9 @@
         break;
       case Token.FUNCTION:
         nameStack.pop();
+        nameStack.pop();
+        break;
+      case Token.LP:
         break;
       case Token.CATCH:
         nameStack.pop();
