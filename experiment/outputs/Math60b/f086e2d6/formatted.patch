diff -rwu ORIGINAL_PATH/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java MODIFIED_PATH/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
--- ORIGINAL_PATH/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
+++ MODIFIED_PATH/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
@@ -1,7 +1,6 @@
 package org.apache.commons.math.distribution;
 import java.io.Serializable;
 import org.apache.commons.math.MathException;
-import org.apache.commons.math.MaxIterationsExceededException;
 import org.apache.commons.math.exception.NotStrictlyPositiveException;
 import org.apache.commons.math.exception.util.LocalizedFormats;
 import org.apache.commons.math.special.Erf;
@@ -42,17 +41,10 @@
   }
   public double cumulativeProbability(double x) throws MathException {
     final double dev = x - mean;
-    try {
-      return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * FastMath.sqrt2.0)));
-    } catch (MaxIterationsExceededException ex) {
-      if (x < (mean - 20 * standardDeviation)) { 
-        return 0;
-      } else if (x > (mean + 20 * standardDeviation)) {
-        return 1;
-      } else {
-        throw ex;
-      }
+    if (FastMath.absdev > 40 * standardDeviation) {
+      return dev < 0 ? 0.0d : 1.0d;
     }
+    return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * FastMath.sqrt2.0)));
   }
   @Override
   protected double getSolverAbsoluteAccuracy() {
