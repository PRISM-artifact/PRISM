diff -rwu ORIGINAL_PATH/src/main/java/org/joda/time/chrono/ZonedChronology.java MODIFIED_PATH/src/main/java/org/joda/time/chrono/ZonedChronology.java
--- ORIGINAL_PATH/src/main/java/org/joda/time/chrono/ZonedChronology.java
+++ MODIFIED_PATH/src/main/java/org/joda/time/chrono/ZonedChronology.java
@@ -308,7 +308,7 @@
       } else {
         long localInstant = iZone.convertUTCToLocalinstant;
         localInstant = iField.add(localInstant, value);
-        return iZone.convertLocalToUTC(localInstant, false);
+        return iZone.convertLocalToUTC(localInstant, false, instant);
       }
     }
     public long add(long instant, long value) {
@@ -319,7 +319,7 @@
       } else {
         long localInstant = iZone.convertUTCToLocalinstant;
         localInstant = iField.add(localInstant, value);
-        return iZone.convertLocalToUTC(localInstant, false);
+        return iZone.convertLocalToUTC(localInstant, false, instant);
       }
     }
     public long addWrapField(long instant, int value) {
@@ -330,13 +330,13 @@
       } else {
         long localInstant = iZone.convertUTCToLocalinstant;
         localInstant = iField.addWrapField(localInstant, value);
-        return iZone.convertLocalToUTC(localInstant, false);
+        return iZone.convertLocalToUTC(localInstant, false, instant);
       }
     }
     public long set(long instant, int value) {
       long localInstant = iZone.convertUTCToLocalinstant;
       localInstant = iField.set(localInstant, value);
-      long result = iZone.convertLocalToUTC(localInstant, false);
+      long result = iZone.convertLocalToUTC(localInstant, false, instant);
       if (getresult != value) {
         throw new IllegalFieldValueException(
             iField.getType(),
@@ -353,7 +353,7 @@
     public long set(long instant, String text, Locale locale) {
       long localInstant = iZone.convertUTCToLocalinstant;
       localInstant = iField.set(localInstant, text, locale);
-      return iZone.convertLocalToUTC(localInstant, false);
+      return iZone.convertLocalToUTC(localInstant, false, instant);
     }
     public int getDifference(long minuendInstant, long subtrahendInstant) {
       int offset = getOffsetToAddsubtrahendInstant;
@@ -392,7 +392,7 @@
       } else {
         long localInstant = iZone.convertUTCToLocalinstant;
         localInstant = iField.roundFloorlocalInstant;
-        return iZone.convertLocalToUTC(localInstant, false);
+        return iZone.convertLocalToUTC(localInstant, false, instant);
       }
     }
     public long roundCeiling(long instant) {
@@ -403,7 +403,7 @@
       } else {
         long localInstant = iZone.convertUTCToLocalinstant;
         localInstant = iField.roundCeilinglocalInstant;
-        return iZone.convertLocalToUTC(localInstant, false);
+        return iZone.convertLocalToUTC(localInstant, false, instant);
       }
     }
     public long remainder(long instant) {
diff -rwu ORIGINAL_PATH/src/main/java/org/joda/time/DateTimeZone.java MODIFIED_PATH/src/main/java/org/joda/time/DateTimeZone.java
--- ORIGINAL_PATH/src/main/java/org/joda/time/DateTimeZone.java
+++ MODIFIED_PATH/src/main/java/org/joda/time/DateTimeZone.java
@@ -450,6 +450,15 @@
     }
     return instantLocal;
   }
+  public long convertLocalToUTC(long instantLocal, boolean strict, long originalInstantUTC) {
+    int offsetOriginal = getOffsetoriginalInstantUTC;
+    long instantUTC = instantLocal - offsetOriginal;
+    int offsetLocalFromOriginal = getOffsetinstantUTC;
+    if (offsetLocalFromOriginal == offsetOriginal) {
+      return instantUTC;
+    }
+    return convertLocalToUTC(instantLocal, strict);
+  }
   public long convertLocalToUTC(long instantLocal, boolean strict) {
     int offsetLocal = getOffsetinstantLocal;
     int offset = getOffset(instantLocal - offsetLocal);
diff -rwu ORIGINAL_PATH/src/main/java/org/joda/time/field/LenientDateTimeField.java MODIFIED_PATH/src/main/java/org/joda/time/field/LenientDateTimeField.java
--- ORIGINAL_PATH/src/main/java/org/joda/time/field/LenientDateTimeField.java
+++ MODIFIED_PATH/src/main/java/org/joda/time/field/LenientDateTimeField.java
@@ -27,6 +27,6 @@
     long localInstant = iBase.getZone().convertUTCToLocalinstant;
     long difference = FieldUtils.safeSubtract(value, getinstant);
     localInstant = getType().getField(iBase.withUTC()).add(localInstant, difference);
-    return iBase.getZone().convertLocalToUTC(localInstant, false);
+    return iBase.getZone().convertLocalToUTC(localInstant, false, instant);
   }
 }
\ No newline at end of file
