diff -rwu ORIGINAL_PATH/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java MODIFIED_PATH/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
--- ORIGINAL_PATH/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ MODIFIED_PATH/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -579,7 +579,7 @@
       double[] res = new double[x.length];
       for (int i = 0; i < x.length; i++) {
         double diff = boundaries[1][i] - boundaries[0][i];
-        res[i] = (x[i] - boundaries[0][i]) / diff;
+        res[i] = x[i] / diff;
       }
       return res;
     }
@@ -593,7 +593,7 @@
       double[] res = new double[x.length];
       for (int i = 0; i < x.length; i++) {
         double diff = boundaries[1][i] - boundaries[0][i];
-        res[i] = diff * x[i] + boundaries[0][i];
+        res[i] = diff * x[i];
       }
       return res;
     }
@@ -612,11 +612,13 @@
       if (boundaries == null) {
         return true;
       }
+      final double[] bLoEnc = encode(boundaries[0]);
+      final double[] bHiEnc = encode(boundaries[1]);
       for (int i = 0; i < x.length; i++) {
-        if (x[i] < 0) {
+        if (x[i] < bLoEnc[i]) {
           return false;
         }
-        if (x[i] > 1.0) {
+        if (x[i] > bHiEnc[i]) {
           return false;
         }
       }
