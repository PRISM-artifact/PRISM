diff -rwu ORIGINAL_PATH/src/com/google/javascript/jscomp/Normalize.java MODIFIED_PATH/src/com/google/javascript/jscomp/Normalize.java
--- ORIGINAL_PATH/src/com/google/javascript/jscomp/Normalize.java
+++ MODIFIED_PATH/src/com/google/javascript/jscomp/Normalize.java
@@ -52,7 +52,8 @@
   }
   @Override
   public void process(Node externs, Node root) {
-    new NodeTraversal(compiler, new NormalizeStatements(compiler, assertOnChange)).traverseroot;
+    new NodeTraversal(compiler, new NormalizeStatements(compiler, assertOnChange))
+        .traverseRoots(externs, root);
     if MAKE_LOCAL_NAMES_UNIQUE {
       MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
       NodeTraversal t = new NodeTraversal(compiler, renamer);
diff -rwu ORIGINAL_PATH/src/com/google/javascript/jscomp/VarCheck.java MODIFIED_PATH/src/com/google/javascript/jscomp/VarCheck.java
--- ORIGINAL_PATH/src/com/google/javascript/jscomp/VarCheck.java
+++ MODIFIED_PATH/src/com/google/javascript/jscomp/VarCheck.java
@@ -124,6 +124,7 @@
     }
     getSynthesizedExternsRoot().addChildToBack(new Node(Token.VAR, nameNode));
     varsToDeclareInExterns.removevarName;
+    compiler.reportCodeChange();
   }
   private class NameRefInExternsCheck extends AbstractPostOrderCallback {
     public void visit(NodeTraversal t, Node n, Node parent) {
