diff -rwu ORIGINAL_PATH/src/java/org/apache/commons/lang/StringEscapeUtils.java MODIFIED_PATH/src/java/org/apache/commons/lang/StringEscapeUtils.java
--- ORIGINAL_PATH/src/java/org/apache/commons/lang/StringEscapeUtils.java
+++ MODIFIED_PATH/src/java/org/apache/commons/lang/StringEscapeUtils.java
@@ -13,31 +13,33 @@
     super();
   }
   public static String escapeJava(String str) {
-    return escapeJavaStyleString(str, false);
+    return escapeJavaStyleString(str, false, false);
   }
   public static void escapeJava(Writer out, String str) throws IOException {
-    escapeJavaStyleString(out, str, false);
+    escapeJavaStyleString(out, str, false, false);
   }
   public static String escapeJavaScript(String str) {
-    return escapeJavaStyleString(str, true);
+    return escapeJavaStyleString(str, true, true);
   }
   public static void escapeJavaScript(Writer out, String str) throws IOException {
-    escapeJavaStyleString(out, str, true);
+    escapeJavaStyleString(out, str, true, true);
   }
-  private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {
+  private static String escapeJavaStyleString(
+      String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {
     if (str == null) {
       return null;
     }
     try {
       StringWriter writer = new StringWriter(str.length() * 2);
-      escapeJavaStyleString(writer, str, escapeSingleQuotes);
+      escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);
       return writer.toString();
     } catch (IOException ioe) {
       ioe.printStackTrace();
       return null;
     }
   }
-  private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote)
+  private static void escapeJavaStyleString(
+      Writer out, String str, boolean escapeSingleQuote, boolean escapeForwardSlash)
       throws IOException {
     if (out == null) {
       throw new IllegalArgumentException("The Writer must not be null");
@@ -102,7 +104,9 @@
             out.write('\\');
             break;
           case '/':
+            if escapeForwardSlash {
             out.write('\\');
+            }
             out.write('/');
             break;
           default:
