diff -rwu ORIGINAL_PATH/src/java/org/apache/commons/lang/enums/ValuedEnum.java MODIFIED_PATH/src/java/org/apache/commons/lang/enums/ValuedEnum.java
--- ORIGINAL_PATH/src/java/org/apache/commons/lang/enums/ValuedEnum.java
+++ MODIFIED_PATH/src/java/org/apache/commons/lang/enums/ValuedEnum.java
@@ -1,4 +1,6 @@
 package org.apache.commons.lang.enums;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
 import java.util.Iterator;
 import java.util.List;
 import org.apache.commons.lang.ClassUtils;
@@ -26,8 +28,29 @@
     return iValue;
   }
   public int compareTo(Object other) {
+    if (other == this) {
+      return 0;
+    }
+    if (other.getClass() != this.getClass()) {
+      if (other.getClass().getName().equals(this.getClass().getName())) {
+        return iValue - getValueInOtherClassLoaderother;
+      }
+      throw new ClassCastException(
+          "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
+    }
     return iValue - (ValuedEnum other).iValue;
   }
+  private int getValueInOtherClassLoader(Object other) {
+    try {
+      Method mth = other.getClass().getMethod("getValue", null);
+      Integer value = Integer mth.invoke(other, null);
+      return value.intValue();
+    } catch (NoSuchMethodException e) {
+    } catch (IllegalAccessException e) {
+    } catch (InvocationTargetException e) {
+    }
+    throw new IllegalStateException("This should not happen");
+  }
   public String toString() {
     if (iToString == null) {
       String shortName = ClassUtils.getShortClassName(getEnumClass());
