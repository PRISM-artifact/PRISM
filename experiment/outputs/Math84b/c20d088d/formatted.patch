diff -rwu ORIGINAL_PATH/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java MODIFIED_PATH/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
--- ORIGINAL_PATH/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
+++ MODIFIED_PATH/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
@@ -2,6 +2,7 @@
 import java.util.Comparator;
 import org.apache.commons.math.FunctionEvaluationException;
 import org.apache.commons.math.optimization.OptimizationException;
+import org.apache.commons.math.optimization.RealConvergenceChecker;
 import org.apache.commons.math.optimization.RealPointValuePair;
 public class MultiDirectional extends DirectSearchOptimizer {
   private final double khi;
@@ -17,6 +18,7 @@
   @Override
   protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
       throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
+    final RealConvergenceChecker checker = getConvergenceChecker();
     while true {
       incrementIterationsCounter();
       final RealPointValuePair[] original = simplex;
@@ -34,6 +36,14 @@
       if (comparator.compare(contracted, best) < 0) {
         return;
       }
+      final int iter = getIterations();
+      boolean converged = true;
+      for (int i = 0; i < simplex.length; ++i) {
+        converged &= checker.converged(iter, original[i], simplex[i]);
+      }
+      if converged {
+        return;
+      }
     }
   }
   private RealPointValuePair evaluateNewSimplex(
