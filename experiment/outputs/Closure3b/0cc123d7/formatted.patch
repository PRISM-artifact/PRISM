diff -rwu ORIGINAL_PATH/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java MODIFIED_PATH/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
--- ORIGINAL_PATH/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
+++ MODIFIED_PATH/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
@@ -74,7 +74,7 @@
     reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
     reachingUses.analyze();
     for (Candidate c : candidates) {
-      if (c.canInline()) {
+      if (c.canInline(t.getScope())) {
         c.inlineVariable();
         if (!c.defMetadata.depends.isEmpty()) {
           inlinedNewDependencies.add(t.getScope().getVarc.varName);
@@ -148,7 +148,7 @@
     private Node getDefCfgNode() {
       return defMetadata.node;
     }
-    private boolean canInline() {
+    private boolean canInline(final Scope scope) {
       if (getDefCfgNode().isFunction()) {
         return false;
       }
@@ -197,6 +197,11 @@
                 case Token.REGEXP:
                 case Token.NEW:
                   return true;
+                case Token.NAME:
+                  Var var = scope.getOwnSlot(input.getString());
+                  if (var != null && var.getParentNode().isCatch()) {
+                    return true;
+                  }
               }
               return false;
             }
