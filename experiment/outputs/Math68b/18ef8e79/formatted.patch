diff -rwu ORIGINAL_PATH/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java MODIFIED_PATH/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java
--- ORIGINAL_PATH/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java
+++ MODIFIED_PATH/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java
@@ -155,6 +155,12 @@
           delta = 2 * lmNorm;
           lmPar *= 0.5;
         }
+        if (((Math.absactRed <= costRelativeTolerance)
+                && (preRed <= costRelativeTolerance)
+                && (ratio <= 2.0))
+            || (delta <= parRelativeTolerance * xNorm)) {
+          return new VectorialPointValuePair(point, objective);
+        }
         if (ratio >= 1.0e-4) {
           firstIteration = false;
           xNorm = 0;
@@ -173,12 +179,6 @@
           residuals = oldRes;
           oldRes = tmpVec;
         }
-        if (((Math.absactRed <= costRelativeTolerance)
-                && (preRed <= costRelativeTolerance)
-                && (ratio <= 2.0))
-            || (delta <= parRelativeTolerance * xNorm)) {
-          return new VectorialPointValuePair(point, objective);
-        }
         if ((Math.absactRed <= 2.2204e-16) && (preRed <= 2.2204e-16) && (ratio <= 2.0)) {
           throw new OptimizationException(
               "cost relative tolerance is too small ({0}),"
