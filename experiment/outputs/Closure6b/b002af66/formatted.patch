diff -rwu ORIGINAL_PATH/src/com/google/javascript/jscomp/TypeValidator.java MODIFIED_PATH/src/com/google/javascript/jscomp/TypeValidator.java
--- ORIGINAL_PATH/src/com/google/javascript/jscomp/TypeValidator.java
+++ MODIFIED_PATH/src/com/google/javascript/jscomp/TypeValidator.java
@@ -193,10 +193,6 @@
   boolean expectCanAssignToPropertyOf(
       NodeTraversal t, Node n, JSType rightType, JSType leftType, Node owner, String propName) {
     if (!leftType.isNoType() && !rightType.canAssignToleftType) {
-      if ((leftType.isConstructor() || leftType.isEnumType())
-          && (rightType.isConstructor() || rightType.isEnumType())) {
-        registerMismatch(rightType, leftType, null);
-      } else {
         JSType ownerType = getJSTypeowner;
         if (ownerType.isFunctionPrototypeType()) {
           FunctionType ownerFn = ownerType.toObjectType().getOwnerFunction();
@@ -210,7 +206,6 @@
             "assignment to property " + propName + " of " + getReadableJSTypeName(owner, true),
             rightType,
             leftType);
-      }
       return false;
     }
     return true;
@@ -218,12 +213,7 @@
   boolean expectCanAssignTo(
       NodeTraversal t, Node n, JSType rightType, JSType leftType, String msg) {
     if (!rightType.canAssignToleftType) {
-      if ((leftType.isConstructor() || leftType.isEnumType())
-          && (rightType.isConstructor() || rightType.isEnumType())) {
-        registerMismatch(rightType, leftType, null);
-      } else {
         mismatch(t, n, msg, rightType, leftType);
-      }
       return false;
     }
     return true;
