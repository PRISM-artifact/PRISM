diff -rwu ORIGINAL_PATH/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java MODIFIED_PATH/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java
--- ORIGINAL_PATH/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java
+++ MODIFIED_PATH/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java
@@ -9,7 +9,6 @@
 import org.apache.commons.math.optimization.ConvergenceChecker;
 import org.apache.commons.math.optimization.GoalType;
 import org.apache.commons.math.random.RandomGenerator;
-import org.apache.commons.math.util.FastMath;
 public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFunction>
     implements BaseUnivariateRealOptimizer<FUNC> {
   private final BaseUnivariateRealOptimizer<FUNC> optimizer;
@@ -67,7 +66,11 @@
         final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
         final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
         optima[i] =
-            optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
+            optimizer.optimize(
+                f,
+                goal,
+                org.apache.commons.math.util.FastMath.max(min, min),
+                org.apache.commons.math.util.FastMath.max(bound1, bound2));
       } catch (FunctionEvaluationException fee) {
         optima[i] = null;
       } catch (ConvergenceException ce) {
