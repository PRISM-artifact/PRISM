diff -rwu ORIGINAL_PATH/src/com/google/javascript/jscomp/parsing/IRFactory.java MODIFIED_PATH/src/com/google/javascript/jscomp/parsing/IRFactory.java
--- ORIGINAL_PATH/src/com/google/javascript/jscomp/parsing/IRFactory.java
+++ MODIFIED_PATH/src/com/google/javascript/jscomp/parsing/IRFactory.java
@@ -235,6 +235,10 @@
     @Override
     Node processAssignment(Assignment assignmentNode) {
       Node assign = processInfixExpressionassignmentNode;
+      Node target = assign.getFirstChild();
+      if (!validAssignmentTargettarget) {
+        errorReporter.error("invalid assignment target", sourceName, target.getLineno(), "", 0);
+      }
       return assign;
     }
     @Override
@@ -595,6 +599,13 @@
         operand.setDouble(-operand.getDouble());
         return operand;
       } else {
+        if (type == Token.INC || type == Token.DEC) {
+          if (!validAssignmentTargetoperand) {
+            String msg =
+                (type == Token.INC) ? "invalid increment target" : "invalid decrement target";
+            errorReporter.error(msg, sourceName, operand.getLineno(), "", 0);
+          }
+        }
         Node node = newNode(type, operand);
         if (exprNode.isPostfix()) {
           node.putBooleanProp(Node.INCRDECR_PROP, true);
@@ -602,6 +613,15 @@
         return node;
       }
     }
+    private boolean validAssignmentTarget(Node target) {
+      switch (target.getType()) {
+        case Token.NAME:
+        case Token.GETPROP:
+        case Token.GETELEM:
+          return true;
+      }
+      return false;
+    }
     @Override
     Node processVariableDeclaration(VariableDeclaration declarationNode) {
       Node node = newNodeToken.VAR;
