diff -rwu ORIGINAL_PATH/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java MODIFIED_PATH/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
--- ORIGINAL_PATH/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
+++ MODIFIED_PATH/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
@@ -58,13 +58,7 @@
     } while ((fa * fb > 0.0)
         && (numIterations < maximumIterations)
         && ((a > lowerBound) || (b < upperBound)));
-    if (fa * fb >= 0.0) {
-      throw new ConvergenceException(
-          "number of iterations={0}, maximum iterations={1}, "
-              + "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, "
-              + "final b value={6}, fa={7}, fb={8}",
-          numIterations, maximumIterations, initial, lowerBound, upperBound, a, b, fa, fb);
-    }
+    if (fa * fb >= 0.0) {}
     return new double[] {a, b};
   }
   public static double midpoint(double a, double b) {
diff -rwu ORIGINAL_PATH/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java MODIFIED_PATH/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
--- ORIGINAL_PATH/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
+++ MODIFIED_PATH/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
@@ -38,9 +38,6 @@
       if (Math.abs(rootFindingFunction.valuelowerBound) < 1E-6) {
         return lowerBound;
       }
-      if (Math.abs(rootFindingFunction.valueupperBound) < 1E-6) {
-        return upperBound;
-      }
       throw new MathExceptionex;
     }
     double root = UnivariateRealSolverUtils.solve(rootFindingFunction, bracket[0], bracket[1]);
