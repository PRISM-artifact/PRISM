diff -rwu ORIGINAL_PATH/src/com/google/javascript/jscomp/TypedScopeCreator.java MODIFIED_PATH/src/com/google/javascript/jscomp/TypedScopeCreator.java
--- ORIGINAL_PATH/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ MODIFIED_PATH/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -255,6 +255,7 @@
     final Scope scope;
     private final List<DeferredSetType> deferredSetTypes = Lists.newArrayList();
     private final List<Node> nonExternFunctions = Lists.newArrayList();
+    private List<Node> lentObjectLiterals = null;
     private final List<StubDeclaration> stubDeclarations = Lists.newArrayList();
     private String sourceName = null;
     private InputId inputId;
@@ -332,6 +333,12 @@
           }
           break;
       }
+      if (n.getParent() != null && NodeUtil.isStatementn && lentObjectLiterals != null) {
+        for (Node objLit : lentObjectLiterals) {
+          defineObjectLiteralobjLit;
+        }
+        lentObjectLiterals.clear();
+      }
     }
     private void attachLiteralTypes(NodeTraversal t, Node n) {
       switch (n.getType()) {
@@ -357,7 +364,15 @@
           n.setJSType(getNativeTypeREGEXP_TYPE);
           break;
         case Token.OBJECTLIT:
+          JSDocInfo info = n.getJSDocInfo();
+          if (info != null && info.getLendsName() != null) {
+            if (lentObjectLiterals == null) {
+              lentObjectLiterals = Lists.newArrayList();
+            }
+            lentObjectLiterals.addn;
+          } else {
           defineObjectLiteraln;
+          }
           break;
       }
     }
