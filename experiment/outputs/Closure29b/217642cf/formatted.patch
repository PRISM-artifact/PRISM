diff -rwu ORIGINAL_PATH/src/com/google/javascript/jscomp/InlineObjectLiterals.java MODIFIED_PATH/src/com/google/javascript/jscomp/InlineObjectLiterals.java
--- ORIGINAL_PATH/src/com/google/javascript/jscomp/InlineObjectLiterals.java
+++ MODIFIED_PATH/src/com/google/javascript/jscomp/InlineObjectLiterals.java
@@ -70,6 +70,7 @@
     }
     private boolean isInlinableObject(List<Reference> refs) {
       boolean ret = false;
+      Set<String> validProperties = Sets.newHashSet();
       for (Reference ref : refs) {
         Node name = ref.getNode();
         Node parent = ref.getParent();
@@ -79,6 +80,14 @@
           if (gramps.isCall() && gramps.getFirstChild() == parent) {
             return false;
           }
+          String propName = parent.getLastChild().getString();
+          if (!validProperties.containspropName) {
+            if (NodeUtil.isVarOrSimpleAssignLhs(parent, gramps)) {
+              validProperties.addpropName;
+            } else {
+              return false;
+            }
+          }
           continue;
         }
         if (!isVarOrAssignExprLhsname) {
@@ -95,6 +104,7 @@
           if (child.isGetterDef() || child.isSetterDef()) {
             return false;
           }
+          validProperties.add(child.getString());
           Node childVal = child.getFirstChild();
           for (Reference t : refs) {
             Node refNode = t.getParent();
