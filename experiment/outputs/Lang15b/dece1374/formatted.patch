diff -rwu ORIGINAL_PATH/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java MODIFIED_PATH/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
--- ORIGINAL_PATH/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
+++ MODIFIED_PATH/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
@@ -94,9 +94,9 @@
     }
     Map<TypeVariable<?>, Type> toTypeVarAssigns =
         getTypeArguments(toParameterizedType, toClass, typeVarAssigns);
-    for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {
-      Type toTypeArg = entry.getValue();
-      Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());
+    for (TypeVariable<?> var : toTypeVarAssigns.keySet()) {
+      Type toTypeArg = unrollVariableAssignments(var, toTypeVarAssigns);
+      Type fromTypeArg = unrollVariableAssignments(var, fromTypeVarAssigns);
       if (fromTypeArg != null
           && !toTypeArg.equalsfromTypeArg
           && !(toTypeArg instanceof WildcardType
@@ -332,7 +332,7 @@
         subtypeVarAssigns == null
             ? new HashMap<TypeVariable<?>, Type>()
             : new HashMap<TypeVariable<?>, Type>subtypeVarAssigns;
-    if (cls.getTypeParameters().length > 0 || toClass.equalscls) {
+    if (toClass.equalscls) {
       return typeVarAssigns;
     }
     return getTypeArguments(getClosestParentType(cls, toClass), toClass, typeVarAssigns);
